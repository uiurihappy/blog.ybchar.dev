plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.ybcharLog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    asciidocVersion = "2.0.6.RELEASE"
    snippetsDir = file('build/generated-snippets')
    queryDslVersion = "5.0.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'

//    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
//    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

    // query dsl
    def queryDSL = '5.0.0'
//    compile("com.querydsl:querydsl-jpa:${queryDSL}")
//    compile("com.querydsl:querydsl-apt:${queryDSL}:jpa")
    annotationProcessor("com.querydsl:querydsl-apt:${queryDSL}:jpa")
    annotationProcessor("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final")
    annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
    outputs.dir snippetsDir
}

//clean {
//    delete file(generated)
//}

def querydslDir = "$buildDir/generated/sources/annotationProcessor/java/main"
//def querydslDir = "$buildDir/generated/querydsl"
//
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}
sourceSets {
    main.java.srcDir querydslDir
}
//gradle clean 시, Q Class 디렉토리까지 삭제하도록 설정
clean {
    delete file(querydslDir)
}
//
//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}





